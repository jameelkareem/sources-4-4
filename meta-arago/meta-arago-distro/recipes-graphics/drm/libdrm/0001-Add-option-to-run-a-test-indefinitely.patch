From ca0a8795495a3b99c841e5a91dfa5de5c56758c6 Mon Sep 17 00:00:00 2001
From: Alejandro Hernandez <ajhernandez@ti.com>
Date: Tue, 23 Sep 2014 09:30:24 -0400
Subject: [PATCH] Add option to run a test indefinitely

This patch adds option -t to the modetest cli. When this option is
speficied modetest will not stop on stdin input. This patch
allows using modetest within ltp-ddt, before this patch modetest
was not able to run in ltp-ddt because ltp-ddt sends data to stdin
when a test is run

Signed-off-by: Alejandro Hernandez <ajhernandez@ti.com>
Signed-off-by: Denys Dmytriyenko <denys@ti.com>
---
 tests/modetest/modetest.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/tests/modetest/modetest.c b/tests/modetest/modetest.c
index 22e3e81..a74e39a 100644
--- a/tests/modetest/modetest.c
+++ b/tests/modetest/modetest.c
@@ -1181,7 +1181,7 @@ static void clear_cursors(struct device *dev)
 		bo_destroy(dev->mode.cursor_bo);
 }
 
-static void test_page_flip(struct device *dev, struct pipe_arg *pipes, unsigned int count)
+static void test_page_flip(struct device *dev, struct pipe_arg *pipes, unsigned int count, int dont_stop)
 {
 	uint32_t handles[4] = {0}, pitches[4] = {0}, offsets[4] = {0};
 	unsigned int other_fb_id;
@@ -1258,7 +1258,7 @@ static void test_page_flip(struct device *dev, struct pipe_arg *pipes, unsigned
 			fprintf(stderr, "select timed out or error (ret %d)\n",
 				ret);
 			continue;
-		} else if (FD_ISSET(0, &fds)) {
+		} else if (!dont_stop && FD_ISSET(0, &fds)) {
 			break;
 		}
 #endif
@@ -1492,7 +1492,7 @@ static int pipe_resolve_connectors(struct device *dev, struct pipe_arg *pipe)
 	return 0;
 }
 
-static char optstr[] = "cdD:efM:P:ps:Cvw:";
+static char optstr[] = "cdD:efM:P:ps:Cvw:t";
 
 int main(int argc, char **argv)
 {
@@ -1507,6 +1507,7 @@ int main(int argc, char **argv)
 	char *module = NULL;
 	unsigned int i;
 	unsigned int count = 0, plane_count = 0;
+	int dont_stop= 0;
 	unsigned int prop_count = 0;
 	struct pipe_arg *pipe_args = NULL;
 	struct plane_arg *plane_args = NULL;
@@ -1594,6 +1595,9 @@ int main(int argc, char **argv)
 
 			prop_count++;
 			break;
+		case 't':
+			dont_stop = 1;
+			break;
 		default:
 			usage(argv[0]);
 			break;
@@ -1666,7 +1670,7 @@ int main(int argc, char **argv)
 			set_cursors(&dev, pipe_args, count);
 
 		if (test_vsync)
-			test_page_flip(&dev, pipe_args, count);
+			test_page_flip(&dev, pipe_args, count, dont_stop);
 
 		if (drop_master)
 			drmDropMaster(dev.fd);
-- 
2.2.0

